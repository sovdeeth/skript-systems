on load:
    set {colour::main} to formatted "<##888897>"
    set {colour::accent} to formatted "<##CCDDFF>"
    set {colour::info} to formatted "<##777777>"
    set {colour::warning} to formatted "<##DD8c8c>"
    set {colour::error} to formatted "<##FF3434>"
    set {colour::success} to formatted "<##22AA6A>"

command /servercolour <text> [<text>]:
    permission: core.admin
    usage: /servercolour (main|accent|success|info|warning|error|list) [colour hex code]
    trigger:
        if arg 1 is "main":
            set {colour::main} to formatted "<##%arg 2%>"
            send sm("success","Set main colour to (1)(2).", ({colour::main},colourAsHex({colour::colour::main})))
        else if arg 1 is "accent":
            set {colour::accent} to formatted "<##%arg 2%>"
            send sm("success","Set accent colour to (1)(2).", ({colour::accent},colourAsHex({colour::accent})))
        else if arg 1 is "info":
            set {colour::info} to formatted "<##%arg 2%>"
            send sm("success","Set info colour to (1)(2).", ({colour::info},colourAsHex({colour::info})))
        else if arg 1 is "warning":
            set {colour::warning} to formatted "<##%arg 2%>"
            send sm("success","Set warning colour to (1)(2).", ({colour::warning},colourAsHex({colour::warning})))
        else if arg 1 is "error":
            set {colour::error} to formatted "<##%arg 2%>"
            send sm("success","Set error colour to (1)(2).", ({colour::error},colourAsHex({colour::error})))
        else if arg 1 is "success":
            set {colour::success} to formatted "<##%arg 2%>"
            send sm("success","Set success colour to (1)(2).", ({colour::success},colourAsHex({colour::success})))
        else if arg 1 is "list":
            send sm("info","Main: (1)(2).", ({colour::main},colourAsHex({colour::main})))
            send sm("info","Accent: (1)(2).", ({colour::accent},colourAsHex({colour::accent})))
            send sm("info","Info: (1)(2).", ({colour::info},colourAsHex({colour::info})))
            send sm("info","Warning: (1)(2).", ({colour::warning},colourAsHex({colour::warning})))
            send sm("info","Error: (1)(2).", ({colour::error},colourAsHex({colour::error})))
            send sm("info","Success: (1)(2).", ({colour::success},colourAsHex({colour::success})))

function color(t: text) :: text:
    return formatted "<##%{_t}%>"

function colour(t: text) :: text:
    return formatted "<##%{_t}%>"

function colorAsHex(c: text) :: text:
    set {_c::*} to {_c} split at ""
    set {_hex} to uncoloured "##%{_c::4}%%{_c::6}%%{_c::8}%%{_c::10}%%{_c::12}%%{_c::14}%"
    return {_hex}

function colourAsHex(c: text) :: text:
    return colorAsHex({_c})