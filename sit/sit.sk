options:
    distance: 2

import:
    org.bukkit.entity.ArmorStand

on load:
    set {sitRotate} to false

on right click: 
    "%player's tool%" is "0 air" #empty hand
    player is not sneaking #sneaking prevents sitting
    raw name of event-block contains "stair" or "slab" or "carpet" #is it the right block
    {-sit::vehicle::%player%} is not set #is the player already sitting
    block above event-block is air  # Checks if there is air above. Looking at you, Spartan >_>

    # ensure it's a lower slab or lower stair
    if raw name of event-block does not contain "carpet":
        if "%event-block's block data%" does not contain "bottom":
            stop
    
    # # for spellcasting tables
    # if raw name of event-block contains "white_carpet":
    #     if checkKT(location of event-block, 1):
    #         stop
    # if raw name of event-block contains "brown_carpet":
    #     if checkWT(location of event-block, 2):
    #         stop
   
    # is the player in range
    if distance between event-player and event-block > {@distance}: 
        send action bar "%{colour::error}% You're too far away to sit down!" to event-player
        stop

    # check if someone's already sitting there
    loop {-sit::vehicle::*}:
        the location at the block at the location 0.2 meters above loop-value = event-location
        stop

    # setup the proper offset
    set {_offset} to 0.25 #offset for stairs/slabs
    if raw name of event-block contains "carpet":
        set {_offset} to 0.7 #offset for carpets

    #run sitting stuff
    sitDown(event-player,event-location, {_offset})


command /sit:
    trigger:
        if block at location 0.1 meters below player is not solid: # make sure they can sit down
            send action bar "%{colour::error}% You can't sit here!" to player
            stop
        {-sit::vehicle::%player%} is not set # not already sitting
        sitDown(player, player's location)



# handle standing up / sitting down

function sitDown(p: player, location: location, offset: number=0.22):
    # save location of player
    set {sit::%{_p}%::loc} to {_p}'s location

    # summon vehicle
    spawn armor stand at location {_offset} meters below {_location}:
        add "{Tags:[""sit""]}" to the entity's nbt
        entity.setVisible(false)
        entity.setSmall(true)
        entity.setSilent(true)
        entity.setMarker(true)
        entity.setInvulnerable(true)
        # apply invisibility 1 without particles to entity for 1 day
        set max health of entity to 0.1
        # equip entity with saddle
        make {_p} ride entity #sit down
        set {-sit::vehicle::%{_p}%} to entity
    sitRotateUpdate()
    
function standUp(p: player, e: entity):
    kill {_e} #kill it
    clear {-sit::vehicle::%{_p}%} # mark player as not sitting
    wait 1 tick # wait to allow teleport
    set yaw of {sit::%{_p}%::loc} to {_p}'s yaw # set correct yaw/pitch
    set pitch of {sit::%{_p}%::loc} to {_p}'s pitch
    teleport {_p} to {sit::%{_p}%::loc}
    clear {sit::%{_p}%::loc}


# handle rotation
function sitRotateUpdate(): #this allows the player to have their legs in the right position
    {sitRotate} is false # check if already running
    set {sitRotate} to true # mark as running
    while size of {-sit::vehicle::*} > 0: # while there are people sitting
        loop {-sit::vehicle::*}: # loop each one
            set {_l} to location of (loop-index parsed as player) # get player
            (loop-value).setRotation({_l}.getYaw(), {_l}.getPitch())
            # (loop-value).setYRot({_p}.getPitch());
        wait 5 tick #stuttery but saves performance and it doesn't matter that much
            
    set {sitRotate} to false # mark as not running



# events that should make you stand up

on dismount:
    {-sit::vehicle::%player%} is set
    standUp(player, (player's vehicle))

on quit: 
    set {sit::%player%::offlineloc} to {sit::%player%::loc} # store location for when they rejoin
    {-sit::vehicle::%player%} is set # were they sitting
    kill player's vehicle # kill seat
    clear {-sit::vehicle::%player%} # mark as not sitting

on join:
    {sit::%player%::offlineloc} is set # if they had logged out sitting down
    set yaw of {sit::%player%::offlineloc} to player's yaw # set correct yaw/pitch
    set pitch of {sit::%player%::offlineloc} to player's pitch
    teleport player to {sit::%player%::offlineloc} # teleport
    clear {sit::%player%::*} # clear to prevent teleport on next join 


on damage of player:
    {-sit::vehicle::%victim%} is set
    standUp(victim, (victim's vehicle))

on block break:
    loop {-sit::vehicle::*}:
        the location at the block at the location 0.2 meters above loop-value = event-location
        set {_p} to loop-index parsed as player
        standUp({_p}, ({_p}'s vehicle))

