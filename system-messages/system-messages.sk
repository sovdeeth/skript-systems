# How to use:

# send sm("info","here's the info about [1]: {2}",({_player},{_info})) to player
# objects included at the end are auto-inserted into the string with proper color formatting
# sm simply returns a formatted string. Some text features like <run command> or similar <> will need you to say 'send formmated sm()',
# but normally you won't need to.

# you can use sm(), sysMsg(), or systemMessage()

# (1) inserts with no accent, no quotes
# [1] inserts with accent, but no quotes
# {1} inserts with accent and quotes

options:
    cm: <##aaaaaa>
    ca: <##ffffff>
    ci: <##777777>
    cw: &c
    ce: &4
    cs: &2
    prefix: [!]


function systemMessage(level: text, msg: text, inputs: objects = "none") :: string:
    set {_prefix} to formatted "%{colour::%{_level}%}%{@prefix}{@cm}"
    
    if {_inputs::1} is "none":
        return formatted "%{_prefix}% %{_msg}%"
    
    loop {_inputs::*}:
        replace "(%loop-index%)" with "%loop-value%{@cm}" in {_msg}
        replace "[%loop-index%]" with "{@ca}%loop-value%{@cm}" in {_msg}
        replace "{%loop-index%}" with """{@ca}%loop-value%{@cm}""" in {_msg}
    
    return formatted "%{_prefix}% %{_msg}%"


function sysMsg(l: text, m: text, i: objects = "none") :: string:
    return systemMessage({_l}, {_m}, {_i::*})
    
function sm(l: text, m: text, i: objects = "none") :: string:
    return systemMessage({_l}, {_m}, {_i::*})
    
command /systemMessageExamples:
    permission: server.admin
    trigger:
        send systemMessage("info","[1]'s character is named {2}.", (player, "Sovde"))
        send systemMessage("warning","Are you sure you want to rename your character? Run [1] to confirm.", ("/rename confirm"))
        send sysMsg("success","Renamed your character to {1}!", ("Edvos"))
        send sm("error","Character names cannot be more than (1) characters!", (96))
        